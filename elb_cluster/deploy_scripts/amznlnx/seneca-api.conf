# To enable the API, place this file in a directory where Apache will load extra modules from.
# In Amazon Linux:
# `/etc/httpd/conf.d/`


#######################################
### "WSGISocketPrefix" directive
# When mod_wsgi is used in ‘daemon’ mode, UNIX sockets are used to communicate
# between the Apache child processes and the daemon processes which are to handle a request.
# These sockets and any related mutex lock files will be placed in the standard Apache runtime directory.
# This is the same directory that the Apache log files would normally be placed.
# For some Linux distributions, restrictive permissions are placed on
# the standard Apache runtime directory such that the directory is not readable to others.
# To resolve the problem, the WSGISocketPrefix directive should be defined to point at an alternate location.
# http://modwsgi.readthedocs.io/en/develop/user-guides/configuration-issues.html#location-of-unix-sockets

# "WSGISocketPrefix" directive has to be outside "VirtualHost" block.
# So, either include it directly in httpd.conf file; or,
# include it outside VirtualHost block in this script.
# https://stackoverflow.com/questions/29754226/how-to-configure-wsgisocketprefix


#######################################
### "WSGIDaemonProcess" directive
# GENERAL NOTE: WSGIDaemonProcess parameters set config params for sub-processes of apache daemon.
# Some of these parameters and directives are also set by env vars such as PYTHONHOME.
# The main difference between specifying them in parameters passed to "WSGIDaemonProcess" versus
# setting them as env vars is whether sub-processes in Apache daemons will pick up these specs or not.
# When we set parameters such as python-path and python-home in "WSGIDaemonProcess" call, all
# sub-processes of Apache daemon will also pick up these settings (recommended).
# So, even if we have set some python parameters globally or for our virtual env through shell,
# we still need to set these parameters on WSGIDaemonProcess directive to make sure WSGI will
# pass them through all apache sub-processes too.
# http://modwsgi.readthedocs.io/en/develop/configuration-directives/WSGIDaemonProcess.html


## --python-home (corresponds to sys.prefix)
# "python-home" sets the location of the Python virtual environment to be used by the daemon processes.
# Use the same directory as "sys.prefix" set by the Python virtual environment.
# I.e., use the output from the following command:
# $ source /opt/venv/bin/activate
# $ python -c "import sys; print sys.prefix"

# To verify the effect, check the output from the following command:
# $ python -c "import os; print(os.__file__)"

# When pointing to a virtual env,
# make sure you use the same Python installation that mod_wsgi was originally compiled for.
# http://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html
# https://serverfault.com/questions/599859/multiple-python-versions-under-apachemod-wsgi


## --python-path (corresponds to sys.path)
# "python-path" parameter instructs python on where to look for python packages.
# Set it to a list of colon separated directories to add to the Python module search path.
# I.e., use the output from the following command:
# $ source /opt/venv/bin/activate
# $ python -c "import sys; print sys.path"

# To verify the effect, check the path of an example package:
# $ "import pandas; print(pandas.__path__)"
# If using a virtual env, we can use the "python-home" option
# to specify the root of the Python virtual environment instead of specifying "python-path".


#######################################
### "WSGIPythonPath" directive
# This directive is geared toward "embedded" mode, not "daemon" mode.
# It has the same effect as setting "python-path" parameter of WSGIDaemonProcess.
# I.e., when using mod_wsgi 2.0, this directive only sets up
# the additional Python module search directories for interpreters
# created in the Apache child processes where "embedded" mode is used.

# If directories need to be specified for interpreters
# running in "daemon" processes, the ‘python-path’ option to the WSGIDaemonProcess directive.

# Read why it is recommended to use single-application daemon mode
# (ie, not use WSGIPythonPath and WSGIPythonHome directives):
# http://modwsgi.readthedocs.io/en/develop/user-guides/virtual-environments.html


#######################################
### WSGIApplicationGroup directive
# Sets which application group WSGI application belongs to.
# Set this to %{GLOBAL} when a third party C extension module for Python
# has used the simplified threading API for manipulation
# of the Python GIL and thus will not run correctly
# within any additional sub interpreters created by Python.

# Pandas (and a few other packages) will not properly load
# unless you add WSGIApplicationGroup %{GLOBAL} right
# after WSGIScriptAlias, not just within a directory. See
# http://stackoverflow.com/questions/40028497/import-pandas-on-apache-server-causes-timeout-error
# http://modwsgi.readthedocs.io/en/develop/configuration-directives/WSGIApplicationGroup.html


#######################################
### WSGIScriptAlias directive
# Path to the WSGI script.
# Note that in our case, we have created a symlink from "/var/www/html/seneca-api" that points to
# the codebase directory that contains WSGI script.
# Side note: the situation is different for .CONF file. We physically copy .CONF file to Apache dir.
# http://modwsgi.readthedocs.io/en/develop/configuration-directives/WSGIScriptAlias.html

#######################################
#######################################

WSGISocketPrefix /var/run/wsgi

<VirtualHost *:80>
        ServerName seneca-api

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html

        WSGIDaemonProcess seneca-api threads=5 python-home=/opt/venv python-path=/opt/venv/lib/python2.7/site-packages:/opt/venv/lib64/python2.7/site-packages user=apache group=apache
        WSGIProcessGroup seneca-api
        WSGIScriptAlias / /var/www/html/seneca-api/seneca-api.wsgi
        WSGIApplicationGroup %{GLOBAL}
        <Directory seneca-api>
                WSGIProcessGroup seneca-api
                WSGIApplicationGroup %{GLOBAL}
                Require all granted
        </Directory>

    ErrorLog "/var/log/apache2/seneca-api-error_log"
    CustomLog "/var/log/apache2/seneca-api-access_log" common
    # ErrorLogFormat \"%v [%t] [%l] [pid %P] %F: %E: [client %a] %M\"
    # CustomLog \"| /usr/bin/logger -t seneca -p local6.info -n cloudwatchlogs -P 514\" \"%v %h %l %u %t %r %>s %b %{Referer}i %{User-agent}i\"
    # ErrorLog \"| /usr/bin/logger -t seneca -p local7.info -n cloudwatchlogs -P 514\"

</VirtualHost>
