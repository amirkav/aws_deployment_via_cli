FROM <address to registry>/rhel_aws_base:0.1
USER root
MAINTAINER devops@altitudenetworks.com


### Set environmental variables
ENV VENV_DIR /opt/venv
ENV DATA_DIR /opt/data
ENV GITS_DIR /opt/gits
ENV CONF_DIR /opt/.credentials


### Install basics
RUN yum update -y
RUN yum install -y sudo
RUN yum install -y git
RUN yum install -y httpd mod_ssl; yum clean all; systemctl enable httpd.service
RUN yum install -y mod_wsgi
RUN yum -y install gcc gcc-c++ kernel-devel
RUN yum -y install python-devel libxslt-devel libffi-devel openssl-devel


### Install virtualenv and python packages
RUN yum install -y python-setuptools
RUN easy_install virtualenv
RUN rm -rf $VENV_DIR
RUN virtualenv $VENV_DIR
RUN chmod -R 775 $VENV_DIR
RUN /bin/bash -c 'source ${VENV_DIR}/bin/activate; pip install --upgrade pip'
RUN /bin/bash -c 'source ${VENV_DIR}/bin/activate; pip install numpy scipy pandas sklearn flask flask-WTF'


### Install model
RUN rm -rf $GITS_DIR
RUN mkdir $GITS_DIR
WORKDIR /opt
RUN git clone https://github.com/amirkav/seneca.git
WORKDIR /opt/gits/
RUN /bin/bash -c 'source ${VENV_DIR}/bin/activate; pip install .'

RUN echo "The web server is running" > /var/www/html/test-server.html


### Set permissions
RUN rm -rf /var/www/html/seneca-api
RUN ln -sT $GITS_DIR/aurelius/elb_cluster/deploy_scripts/rhel /var/www/html/seneca-api
RUN chown -R apache /var/www/html/seneca-api
RUN chgrp -R apache $VENV_DIR
RUN chmod -R 775 $VENV_DIR
RUN chgrp -R apache $GITS_DIR
RUN chmod -R 775 $GITS_DIR
RUN chgrp -R apache /usr/local/lib
RUN chmod -R 775 /usr/local/lib


### Start web app and Apache server
# RUN /bin/bash -c 'source ${VENV_DIR}/bin/activate; python ${GITS_DIR}/api/_api.py'

EXPOSE 5000

# Start the service
# httpd has to be entry point (pid=1) for the docker container,
# and it needs to run in the foreground, without terminating.
# Flask app also needs to be running in the foreground, and
# it needs to start with or after Apache server.
# We cannot use & or nohup in RUN, because each RUN command starts a new shell.
# So, start Apache server and Flask app together using the CMD command.
# This also means that when starting a container from this image,
# there is no need to start the app by providing a CMD or ENTRYPOINT override parameter.
CMD mkdir /run/httpd ; \
        /opt/venv/bin/python /opt/gits/seneca/api/_api.py ; \
        /usr/sbin/httpd -D FOREGROUND
